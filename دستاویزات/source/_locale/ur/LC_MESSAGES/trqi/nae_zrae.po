# SOME DESCRIPTIVE TITLE.
# Copyright (C) ژولیئں ملاغ، محمّد اظہر انعام بیگ، ۲۰۱۸+
# This file is distributed under the same license as the تقدیر package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: تقدیر 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-01 17:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/trqi/nae_zrae.rst:4
msgid "نئے ذرائع"
msgstr "نئے ذرائع"

#: ../../source/trqi/nae_zrae.rst:5
msgid ""
"اگر آپکو ايسی وضع کے کوائف استعمال کرنے ہیں جو ابھی تک تقدیر میں دستیاب "
"نہیں ہیں، تو آپ اسکے لئے ایک نئے ذریعہ کی قسم بنا سکتے ہیں۔"
msgstr ""
"اگر آپکو ايسی وضع کے کوائف استعمال کرنے ہیں جو ابھی تک تقدیر میں دستیاب "
"نہیں ہیں، تو آپ اسکے لئے ایک نئے ذریعہ کی قسم بنا سکتے ہیں۔"

#: ../../source/trqi/nae_zrae.rst:8
msgid ""
"تقدیر میں دو قسم کے ‍‌ذرائع ہیں، اعم ذرائع (:class:`~تقدیر.ذریعہ.ذریعہ`) اور"
" نکتہ کے ذرائع (:class:`~تقدیر.ذریعہ_نکتہ.ذریعہ_نکتہ`)۔"
msgstr ""
"تقدیر میں دو قسم کے ‍‌ذرائع ہیں، اعم ذرائع (:class:`~تقدیر.ذریعہ.ذریعہ`) اور"
" نکتہ کے ذرائع (:class:`~تقدیر.ذریعہ_نکتہ.ذریعہ_نکتہ`)۔"

#: ../../source/trqi/nae_zrae.rst:10
msgid ""
"نکتہ کے ذرائع وہ ‌ذرائع ہیں جنکو بناتے پر ھی پتا ھو جاتا ہیے کے انکے کوائف "
"نکشہ پر کس نکتے سے ایں گے۔ نکتہ کے ذرائے کا ایک نمونہ ہیے دیسات کے مسل کا "
"ذریع، کیوں کے مسل میں ایک ہی جگہ کے کوائف رہتے ہیں۔ اعم ذرائع میں مختلف جگے "
"کے کوائف دستیاب ہیں، جیسے کے مرکسم کا ذریع، جسے پوری دنیا کے کوائف ملی جا "
"سکتے ہیں۔"
msgstr ""
"نکتہ کے ذرائع وہ ‌ذرائع ہیں جنکو بناتے پر ھی پتا ھو جاتا ہیے کے انکے کوائف "
"نکشہ پر کس نکتے سے ایں گے۔ نکتہ کے ذرائے کا ایک نمونہ ہیے دیسات کے مسل کا "
"ذریع، کیوں کے مسل میں ایک ہی جگہ کے کوائف رہتے ہیں۔ اعم ذرائع میں مختلف جگے "
"کے کوائف دستیاب ہیں، جیسے کے مرکسم کا ذریع، جسے پوری دنیا کے کوائف ملی جا "
"سکتے ہیں۔"

#: ../../source/trqi/nae_zrae.rst:14
msgid ""
"نئی قسم کے ليے، اعم ذریع ہو یا نکتہ کا بھی، آپکو ایک نيا فعل لکھنا پڑے گا: "
":meth:`~تقدیر.ذریعہ.ذریعہ._کوائف_بنانا`۔"
msgstr ""
"نئی قسم کے ليے، اعم ذریع ہو یا نکتہ کا بھی، آپکو ایک نيا فعل لکھنا پڑے گا: "
":meth:`~تقدیر.ذریعہ.ذریعہ._کوائف_بنانا`۔"

#: ../../source/trqi/nae_zrae.rst:17
msgid "اعم ذرائع"
msgstr "اعم ذرائع"

#: ../../source/trqi/nae_zrae.rst:18
msgid ""
"نمونے کے طور پر ناسا نام کے ذریعے کا :meth:`~تقدیر.ذریعہ.ذریعہ._کوائف_بنانا`"
" نام کا فعل نیچے دیا گيا ہے۔"
msgstr ""
"نمونے کے طور پر ناسا نام کے ذریعے کا :meth:`~تقدیر.ذریعہ.ذریعہ._کوائف_بنانا`"
" نام کا فعل نیچے دیا گيا ہے۔"

#: ../../source/trqi/nae_zrae.rst:20
msgid ""
"class ناسا(ذریعہ):\n"
"\n"
"    def _کوائف_بنانا(خود, سے, تک, عرض, طول, بلندی, خاکے):\n"
"        try:\n"
"            ذریعہ_ناسا = NASAPowerWeatherDataProvider(latitude=عرض, longitude=طول, force_update=False)\n"
"        except (requests.exceptions.ConnectionError, KeyError, JSONDecodeError):\n"
"            return\n"
"\n"
"        سے = max(ذریعہ_ناسا.first_date, سے)\n"
"        تک = min(ذریعہ_ناسا.last_date, تک)\n"
"\n"
"        اعداد_پاندس = pd.DataFrame(columns=list(متغیرات), index=pd.period_range(سے, تک), dtype=float)\n"
"\n"
"        ستون = {\n"
"            'بارش': 'RAIN',\n"
"            'شمسی_تابکاری': 'IRRAD',\n"
"            'درجہ_حرارت_زیادہ': 'TMAX',\n"
"            'درجہ_حرارت_کم': 'TMIN',\n"
"            'درجہ_حرارت_اوسط': 'TEMP'\n"
"        }\n"
"\n"
"        for تاریخ in اعداد_پاندس.index:\n"
"            for س, س_ناسا in ستون.items():\n"
"                اعداد_پاندس.loc[تاریخ][س] = getattr(ذریعہ_ناسا(سے), س_ناسا)\n"
"\n"
"        اعداد_پاندس.شمسی_تابکاری *= 1e-6\n"
"\n"
"        return اعداد_پاندس"
msgstr ""
"class ناسا(ذریعہ):\n"
"\n"
"    def _کوائف_بنانا(خود, سے, تک, عرض, طول, بلندی, خاکے):\n"
"        try:\n"
"            ذریعہ_ناسا = NASAPowerWeatherDataProvider(latitude=عرض, longitude=طول, force_update=False)\n"
"        except (requests.exceptions.ConnectionError, KeyError, JSONDecodeError):\n"
"            return\n"
"\n"
"        سے = max(ذریعہ_ناسا.first_date, سے)\n"
"        تک = min(ذریعہ_ناسا.last_date, تک)\n"
"\n"
"        اعداد_پاندس = pd.DataFrame(columns=list(متغیرات), index=pd.period_range(سے, تک), dtype=float)\n"
"\n"
"        ستون = {\n"
"            'بارش': 'RAIN',\n"
"            'شمسی_تابکاری': 'IRRAD',\n"
"            'درجہ_حرارت_زیادہ': 'TMAX',\n"
"            'درجہ_حرارت_کم': 'TMIN',\n"
"            'درجہ_حرارت_اوسط': 'TEMP'\n"
"        }\n"
"\n"
"        for تاریخ in اعداد_پاندس.index:\n"
"            for س, س_ناسا in ستون.items():\n"
"                اعداد_پاندس.loc[تاریخ][س] = getattr(ذریعہ_ناسا(سے), س_ناسا)\n"
"\n"
"        اعداد_پاندس.شمسی_تابکاری *= 1e-6\n"
"\n"
"        return اعداد_پاندس"

#: ../../source/trqi/nae_zrae.rst:52
msgid "نکتہ کا ذرائع"
msgstr "نکتہ کا ذرائع"

#: ../../source/trqi/nae_zrae.rst:53
msgid ""
"نکتہ کا ذرائع کو بناتے پر ھی بتانے پڑھتا ہیے کے کہاں کا ہیے اور کس خاکے سے۔ "
"اسی لیے آپکا :meth:`~تقدیر.ذریعہ_نکتہ.ذریعہ_نکتہ._کوائف_بنانا` نام کا فعل "
"میں تاریخ، عرض، طول، بلندی، یا خاکے کے بارے میں فکر کرنے کی ظرورت نہیں، "
"‎‎سرف دستیاب کوائف پاندس میں واپس دینا۔ تقدیر آپکے لیے تاریخ، جگہ اور خاکے "
"کا جانچ کریگا۔"
msgstr ""
"نکتہ کا ذرائع کو بناتے پر ھی بتانے پڑھتا ہیے کے کہاں کا ہیے اور کس خاکے سے۔ "
"اسی لیے آپکا :meth:`~تقدیر.ذریعہ_نکتہ.ذریعہ_نکتہ._کوائف_بنانا` نام کا فعل "
"میں تاریخ، عرض، طول، بلندی، یا خاکے کے بارے میں فکر کرنے کی ظرورت نہیں، "
"‎‎سرف دستیاب کوائف پاندس میں واپس دینا۔ تقدیر آپکے لیے تاریخ، جگہ اور خاکے "
"کا جانچ کریگا۔"

#: ../../source/trqi/nae_zrae.rst:57
msgid ""
"نمونے کے طور پر جےسن نام کے ذریعے کا "
":meth:`~تقدیر.ذریعہ_نکتہ.ذریعہ_نکتہ._کوائف_بنانا` نام کا فعل نیچے دیا گيا "
"ہے۔"
msgstr ""
"نمونے کے طور پر جےسن نام کے ذریعے کا "
":meth:`~تقدیر.ذریعہ_نکتہ.ذریعہ_نکتہ._کوائف_بنانا` نام کا فعل نیچے دیا گيا "
"ہے۔"

#: ../../source/trqi/nae_zrae.rst:59
msgid ""
"class جےسن(ذریعہ_نکتہ):\n"
"\n"
" def __init__(خود, مسل, عرض, طول, بلندی=None, خاکے=None, تبديل_عمودی_ستون=None):\n"
"     super().__init__(عرض, طول, بلندی, خاکے, تبديل_عمودی_ستون)\n"
"\n"
"     if isinstance(مسل, str):\n"
"         ضابطہ = _ضابطہ_بندی(مسل)\n"
"         with open(مسل, 'r', encoding=ضابطہ) as م:\n"
"             خود.جےسن = json.load(م)\n"
"     else:\n"
"         خود.جےسن = مسل\n"
"\n"
" def _کوائف_بنانا(خود, سے, تک, عرض, طول, بلندی, خاکے):\n"
"\n"
"     ستون_تاریخ = خود._نام_عمودی_ستون('تاریخ')\n"
"\n"
"     اعداد_جےسن = pd.DataFrame(\n"
"         data={س: خود.جےسن[خود._نام_عمودی_ستون(س)] for س in متغیرات if خود._نام_عمودی_ستون(س) in خود.جےسن},\n"
"         index=خود._اشاریہ_پانڈا_بنانا(خود.جےسن[ستون_تاریخ])\n"
"     )\n"
"     return اعداد_جےسن"
msgstr ""
"class جےسن(ذریعہ_نکتہ):\n"
"\n"
" def __init__(خود, مسل, عرض, طول, بلندی=None, خاکے=None, تبديل_عمودی_ستون=None):\n"
"     super().__init__(عرض, طول, بلندی, خاکے, تبديل_عمودی_ستون)\n"
"\n"
"     if isinstance(مسل, str):\n"
"         ضابطہ = _ضابطہ_بندی(مسل)\n"
"         with open(مسل, 'r', encoding=ضابطہ) as م:\n"
"             خود.جےسن = json.load(م)\n"
"     else:\n"
"         خود.جےسن = مسل\n"
"\n"
" def _کوائف_بنانا(خود, سے, تک, عرض, طول, بلندی, خاکے):\n"
"\n"
"     ستون_تاریخ = خود._نام_عمودی_ستون('تاریخ')\n"
"\n"
"     اعداد_جےسن = pd.DataFrame(\n"
"         data={س: خود.جےسن[خود._نام_عمودی_ستون(س)] for س in متغیرات if خود._نام_عمودی_ستون(س) in خود.جےسن},\n"
"         index=خود._اشاریہ_پانڈا_بنانا(خود.جےسن[ستون_تاریخ])\n"
"     )\n"
"     return اعداد_جےسن"
